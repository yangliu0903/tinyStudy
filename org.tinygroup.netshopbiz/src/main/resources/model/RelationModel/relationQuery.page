##TODO 增加处理 ，如果视图的参数有值，则自动放在hidden区域，然后调用操作时，如果是None模式，且有此参数，则传过去

#set($viewGroups=$operationDefine.viewGroups)
#if(${operationDefine.fixedSize})##如果是固定大小
	#set($option={"autoOpen":true,"modal":${operationDefine.modal},"resizable":false,"width":"$operationDefine.width","height":"$operationDefine.height"})
	#set($captionButtons="pin:{visible:true},refresh:{visible:false},toggle:{visible:true},minimize:{visible:false},maximize:{visible:false}")
#else
	#set($option={"autoOpen":true,"modal":${operationDefine.modal},"width":"$operationDefine.width","height":"$operationDefine.height"})
	#set($captionButtons="pin:{visible:true},refresh:{visible:false},toggle:{visible:true},minimize:{visible:true},maximize:{visible:true}")
#end

#@wijDialog("${modelDefine.id}_${operationDefine.id}" "${operationDefine.title}" "" $option $captionButtons  ${operationDefine.fixedSize})
##下面生成自定义Css
#if($operationDefine.cssDefine)
<style>
	$operationDefine.cssDefine
</style>
#end
##下面生成查询窗口
#set($hasQuery=false)
#if($operationDefine.conditionGroups)
	##如果有分组
	#set($queryTab={"collapsible":true})
	#@wijTab("${modelDefine.id}_${operationDefine.id}ConditionTab" $queryTab)
		#@wijTabHeader()
			#foreach($groupName in $operationDefine.conditionGroups.split(","))
				#wijTabHeaderItem("${modelDefine.id}_${operationDefine.id}_condition_$groupName" "$groupName")
			#end
		#end
		#foreach($groupName in $operationDefine.conditionGroups.split(","))
			#@wijTabItem("${modelDefine.id}_${operationDefine.id}_condition_$groupName")
			#foreach($conditionField in $operationDefine.conditionFields)
				#if($conditionField.hidden==false&&$conditionField.groups.indexOf($groupName)>=0)
					#set($stdField=$modelDefine.getStandardField($conditionField.fieldId))
					#set($camelName=$modelDefine.getCamelName($stdField.name))
					#set($hasQuery=true)
					#set($controlId="${operationDefine.id}$camelName")
					#if($conditionField.inputMode)##如果有指定输入模式
						#evaluate("#${conditionField.inputMode.type}(\$conditionField.inputMode \$stdField.title \$controlId '$groupName$camelName' '' \$conditionField.editable)")
					#else##没有指定输入模式，就采用输入框的方式
						#textMode($conditionField.inputMode $stdField.title \$controlId "$groupName$camelName" "" $conditionField.editable)
					#end
				#end
			#end
			#end
		#end
	#end
#else
	#if($operationDefine.conditionFields.size()>0)
		#set($groupName="默认查询分组")
		##如果没有分组，则所有的显示在一行上
		#@wijExpander("${modelDefine.id}_${operationDefine.id}ConditionExpender" "基本查询")
		#foreach($conditionField in $operationDefine.conditionFields)
			#set($stdField=$modelDefine.getStandardField($conditionField.fieldId))
			#set($camelName=$modelDefine.getCamelName($stdField.name))
			#set($controlId="${operationDefine.id}$camelName")
			#if($conditionField.hidden==false)
				#set($hasQuery=true)
				#if($conditionField.inputMode)##如果有指定输入模式
					#evaluate("#${conditionField.inputMode.type}(\$conditionField.inputMode \$stdField.title  \$controlId  '$groupName$camelName' '' \$conditionField.editable)")
				#else##没有指定输入模式，就采用输入框的方式
					#textMode($conditionField.inputMode $stdField.title \$controlId "$!groupName$camelName"  "" $conditionField.editable)
				#end
			#end
		#end
		#end
	#end
#end

##下面添加查询参数

#showQueryParameter($operationDefine)

##下面添加操作列表
#foreach($reference in $operationDefine.references)
	#set($info=$modelManager.getModelDefineInfo($modelRequestInfo,$reference.modelId,$reference.id))
<div id="${modelDefine.id}_${info.processDefine.id}_${info.processDefine.type}_container"></div>
#end
##下面添加操作列表

#foreach($reference in $operationDefine.references)
	#set($info=$modelManager.getModelDefineInfo($modelRequestInfo,$reference.modelId,$reference.id))
<button type="button" onclick="do_${modelDefine.id}_${info.processDefine.id}_${info.processDefine.type}();">$info.processDefine.title</button>
#end
#if($hasQuery)##如果有查询，则添加查询按钮
<button type="button" onclick="do_${modelDefine.id}_${operationDefine.id}_query();">查询</button>
	<script>
	function do_${modelDefine.id}_${operationDefine.id}_query(){

		do_${modelDefine.id}_${operationDefine.id}Ajax();
	}
	</script>
#end

<script>
	function do_${modelDefine.id}_${operationDefine.id}Ajax(){
		var pageNumber =0;
		var pageSize=$operationDefine.pageSize;
		var pageObject=$("#${modelDefine.id}_${operationDefine.id}_grid_footerPagingBar");
		if(pageObject.length>0){
			pageNumber = $("#${modelDefine.id}_${operationDefine.id}_grid_footerPagingBar").wijpager("option", "pageIndex");
			pageSize=$("#${modelDefine.id}_${operationDefine.id}_pageSize").val();
		}
		var data={pageNumber:pageNumber ,pageSize:pageSize};
		#if($operationDefine.allowFilterFront==false)
		var columns =  $("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid("columns");
		var sortFields="";
		var sortDirections="";
		for(var i=0;i<columns.length;i++){
			if(columns[i].options.sortDirection!="none"){
				sortFields=sortFields+columns[i].options.dataKey+",";
				var sortDirection=columns[i].options.sortDirection;
				if(sortDirection=="ascending"){
				   sortDirection="asc";
				}else{
				   sortDirection="desc";
				}
				sortDirections=sortDirections+sortDirection+",";
			}
		}
		if(sortFields!=""){//有排序字段
		  data.sortField=sortFields.substring(0,sortFields.length-1);
		  data.sortDirection=sortDirections.substring(0,sortDirections.length-1);
		}
		#end
		var tabSelectTab=$("#${modelDefine.id}_${operationDefine.id}ConditionTab_value").val();
		if(tabSelectTab==undefined){
			tabSelectTab='默认查询分组';
		}
		var inputFields=$("*[name^="+tabSelectTab+"]");
		for(var i=0;i<inputFields.length;i++){
			var input=inputFields[i];
			var name=$(input).attr("name").substring(tabSelectTab.length);
			if($(input).val()!=""){
				data[""+name]=$(input).val();
			}
		}
		loadGridJson('${modelRequestInfo.requestName}.modeljson',data,"${modelDefine.id}_${operationDefine.id}_grid");
	}
</script>
##下面添加操作响应方法列表
<script>
#foreach($reference in $operationDefine.references)
    #set($pageconfig="")
	#set($info=$modelManager.getModelDefineInfo($modelRequestInfo,$reference.modelId,$reference.id))
	#set($pageconfig=$info.modelProcessorDefine.pageConfig)
	#if(!$pageconfig)
	  	#set($pageconfig=$info.processDefine.pageConfig)
	#end
	function do_${modelDefine.id}_${info.processDefine.id}_${info.processDefine.type}(){
		#if($info.modelProcessorDefine.recordMode=="Single")
			var rowData=$("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid("currentCell").row().data;
			var data={
			#set($firstPara=true)
			#foreach($paraName in $modelManager.getParamterList($info.model,$info.processDefine))
				#if($firstPara)#set($firstPara=false)#else,#end$paraName:rowData.$paraName
			#end
			};		
		#elseif($info.modelProcessorDefine.recordMode=="Multiple")
			var selectLines = $("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid("selection").selectedCells()._getSelectedRowsIndicies();
			var dataRows= $("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid("data");
			if(selectLines.length==0){
				alert('请至少选择一行数据！');
				return;
			}
			var dataTemp={};
			for(var index=0;index<selectLines.length;index++){		
				#foreach($paraName in $modelManager.getParamterList($info.model,$info.processDefine))
				    var paramArray=dataTemp.$paraName;
				    if(!paramArray){
				       paramArray=new Array();
				       dataTemp.$paraName=paramArray;
				    }
					paramArray.push(dataRows[selectLines[index]].$paraName);
				#end
			}
			var data={};
			for(var temp in dataTemp){
			  data[""+temp]=dataTemp[temp].join(",");
			}

		#else
			var data={
			};
			var inputFields=$("*[name^=${modelDefine.id}_${operationDefine.id}_]");
			for(var i=0;i<inputFields.length;i++){
			var input=inputFields[i];
			var name=$(input).attr("name").substring("${modelDefine.id}_${operationDefine.id}_".length);
			if($(input).val()!=""&&(data[""+name]==undefined||data[""+name]=="")){
				data[""+name]=$(input).val();
			}
		}
			//
		#end
		data.refreshFunction="do_${modelDefine.id}_${operationDefine.id}Ajax";
		data.operation_id="${modelDefine.id}_${info.processDefine.id}";
		#if($pageconfig.confirm)
		loadConfirmService('#${modelDefine.id}_${info.processDefine.id}_${info.processDefine.type}_container','${info.processDefine.title}','${pageconfig.message}','${info.visitUrl}_${pageconfig.stageName}.modellet',data,do_${modelDefine.id}_${operationDefine.id}Ajax);
		#else
		loadDialogPage('#${modelDefine.id}_${info.processDefine.id}_${info.processDefine.type}_container','${info.visitUrl}.modellet',data);
		#end
	}
#end
</script>

<table id="${modelDefine.id}_${operationDefine.id}_grid" width="100%" height="100%"></table> 

<script type="text/javascript">
    $("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid({ 
     #if($operationDefine.allowEdit)
     	allowEditing:true,
     	afterCellEdit : function (e, args) {
 			//TODO保存数据，添加一个保存数据的stage，然后调用之
 			
        },
     #end
     #if($operationDefine.allowFilterFront)
     showFilter: true, 
     #end
     #if($operationDefine.frontPaging)
     	allowPaging: true, 
	    pageSize: $operationDefine.pageSize, 
        pagerSettings: { position: "topAndBottom",mode:"numericFirstLast" },
     #end
     highlightOnHover :true,
      allowVirtualScrolling:true,
      allowColMoving:true,
	  allowKeyboardNavigation: true, 
      groupAreaCaption:"拖动列到本区域，可按该列进行分组",
 	  showGroupArea: true, 
      selectionMode: "multiRow",
	  allowSorting: true,
	  ensureControl: true,
	  data:getData(),
      allowColMoving: true, 
      columnsAutogenerationMode: "none", 
      #if($operationDefine.allowFilterFront==false)##如果是前台过滤，则排序也不再触发事件
      sorted: function (e, args) { 
	   	do_${modelDefine.id}_${operationDefine.id}Ajax();  
	  },#end
	  filterOperatorsListShowing : function (e, args) {
		var displayNames = {
            NoFilter: "不使用过滤",
            Contains: "包含",
            NotContain: "不包含",
            BeginsWith: "以之开始",
            EndsWith: "以之结束",
            Equals: "等于",
            NotEqual: "不等于",
            Greater: "大于",
            Less: "小于",
            GreaterOrEqual: "大于等于",
            LessOrEqual: "小于等于",
            IsEmpty: "为空",
            NotIsEmpty: "不为空",
            IsNull: "为Null",
            NotIsNull: "不为Null"
        }
        for(var i=0;i<args.operators.length;i++){
        	args.operators[i].displayName=displayNames[args.operators[i].name];
        }
      },
      selectionChanged: function (e, args) {
                 var added = args.addedCells,
                    removed = args.removedCells,
                    i, len;
                 for (i = 0, len = added.length(); i < len; i++) {
                    added.item(i).container().find(".${modelDefine.id}_${operationDefine.id}mycb").prop("checked", true);
                 }
 
                 for (i = 0, len = removed.length(); i < len; i++) {
                    removed.item(i).container().find(".${modelDefine.id}_${operationDefine.id}mycb").prop("checked", false);
                 }
              },
      
      columns: [
	{ensurePxWidth: true,headerText: "<input type=\"checkbox\" class=\"${modelDefine.id}_${operationDefine.id}mycb\" onclick=\"toggleSelection(event, this, '${modelDefine.id}_${operationDefine.id}_grid')\" />",
        cellFormatter: function (args) {
           if (args.row.type & $.wijmo.wijgrid.rowType.data) {
              args.$container
                 .empty()
                 .append(
                    $("<input type='checkbox' class='${modelDefine.id}_${operationDefine.id}mycb' />")
                      .click(function (e) {
                         e.stopPropagation();
                      })
                      
                      .change(function (e) {
                         //add the row if checkbox is selected
                         if (e.target.checked) {
                            $("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid("selection").addRows(args.row.dataRowIndex);
                       } else {
                            $("#${modelDefine.id}_${operationDefine.id}_grid").wijgrid("selection").removeRows(args.row.dataRowIndex);
                         }
                      })
                 );
              return true;
           }
        }
,textAlignment: "center"}     
#if($viewGroups.size()==1)##如果只有一个分组，则意味着不分组
	#foreach($viewField in $viewGroups.get(0).fields)
		#if($viewField.hidden==false)
		##todo allowSort要根据模型读取		
		#set($stdField=$modelDefine.getStandardField($viewField.fieldId))
		#set($camelName=$modelDefine.getCamelName($stdField.name))
		#if($modelProcessResult.beans.size()>0) 
			#set($typeName="")
			#evaluate("\#set(\$typeName=\$modelProcessResult.beans[0].${camelName}.class.name)")
			
			#if($typeName=="java.lang.Integer"||$typeName=="java.lang.Long")##如果有数据
				#set($dataType=",dataType: 'number',dataFormatString: 'n0' ")
			#elseif($typeName=="java.lang.Float"||$typeName=="java.lang.Double")##如果有数据
				#set($dataType=",dataType: 'number'")
			#elseif($typeName=="java.util.Date")
				#set($dataType=",dataType: 'datetime'")
			#elseif($typeName=="java.lang.Boolean")
				#set($dataType=",dataType: 'boolean'")
			#else
				#set($dataType=",dataType: 'string'")
			#end
		#end
		
		#if($firstField)#set($firstField=false)#else,#end{ dataKey: "$camelName", headerText: "$stdField.title"$!dataType#if(${viewField.aggregateFunction})#set($hasAggregate=true), aggregate: "${viewField.aggregateFunction}", footerText: "${viewField.aggregateTitle}" #end #if(${viewField.cellFormatter}),cellFormatter:${viewField.cellFormatter}#end}
	#end
	#end
#else
	#foreach($viewGroup in $viewGroups)
		,{
		headerText: "$viewGroup.title", 
		columns: [ 
		#set($firstField=true)
		#foreach($viewField in $viewGroup.fields)
			#if($viewField.hidden==false)
				#set($stdField=$modelDefine.getStandardField($viewField.fieldId))
				#set($camelName=$modelDefine.getCamelName($stdField.name))
				
				#if($modelProcessResult.beans.size()>0) 
					#evaluate("\#set(\$typeName=\$modelProcessResult.beans[0].${camelName}.class.name)")
					#if($typeName=="java.lang.Integer"||$typeName=="java.lang.Long")##如果有数据
						#set($dataType=",dataType: 'number',dataFormatString: 'n0' ")
					#elseif($typeName=="java.lang.Float"||$typeName=="java.lang.Double")##如果有数据
						#set($dataType=",dataType: 'number'")
					#elseif($typeName=="java.util.Date")
						#set($dataType=",dataType: 'datetime'")
					#elseif($typeName=="java.lang.Boolean")
						#set($dataType=",dataType: 'boolean'")
					#else
						#set($dataType=",dataType: 'string'")
					#end
				#end
				
				#if($firstField)#set($firstField=false)#else,#end{ dataKey: "$camelName", headerText: "$stdField.title"$dataType#if(${viewField.aggregateFunction})#set($hasAggregate=true), aggregate: "${viewField.aggregateFunction}", footerText: "${viewField.aggregateTitle}" #end}
			#end
		#end	
		]}
	#end
#end

	]
	#if($hasAggregate)
	,showFooter: true
	#end
    }); 

  function getData() { 
	var data=$jsonConverter.convert($modelProcessResult.beans);
    return data; 
  } 
</script>
#if($operationDefine.frontPaging==false)
<div id="${modelDefine.id}_${operationDefine.id}_grid_footerPagingBar">分页大小:<select id="${modelDefine.id}_${operationDefine.id}_pageSize" name="${modelDefine.id}_${operationDefine.id}_pageSize" onchange="do_${modelDefine.id}_${operationDefine.id}Ajax();">
  <option value="5" selected="true">5</option>
  <option value="10" selected="true">10</option>
  <option value="20">20</option>
  <option value="50">50</option>
  <option value="100">100</option>
  <option value="200">200</option>
  <option value="500">500</option>
  <option value="1000">1000</option>
</select>

<script>
$("#${modelDefine.id}_${operationDefine.id}_grid_footerPagingBar").wijpager({ 
pageIndexChanged: function (e, args) {
	do_${modelDefine.id}_${operationDefine.id}Ajax();
                },
pageCount: $modelProcessResult.totalPages, 
pageIndex: $modelProcessResult.pageNumber, 
mode: "numericFirstLast", 
                firstPageClass: "", previousPageClass: "", nextPageClass: "", lastPageClass: "", 
                firstPageText: "<<", previousPageText: "<", nextPageText: ">", lastPageText: ">>"
            }); 
            
</script>

#end##end table
</div> 
##下面生成自定义Js
#if($operationDefine.jsDefine)
<script>
	$operationDefine.jsDefine
</script>
#end

#end##end dialog



