#pageTitle("topic","topic")
#title("Tiny框架","构建Tiny生态圈 ")
#[[<div class="BlogContent"><span id="OSC_h1_1"></span><h1>生态圈</h1><p>生态圈又称商业生态圈，指商业活动的各利益相关者通过共同建立一个价值平台。各个角色关注其所在的价值平台的整体特性，通过平台撬动其它参与者的能力，使这一系统能够创造价值，并从中分享利益。<br></br>一个好的架构，必须构建一个围绕平台的生态系统，或者流行的说法，叫生态圈。因为再好的系统，如果只是做输出，总是会有这样那样不足的地方，Spring提供了一个依赖注入，实际上就是创建了一个Bean的生态圈，所以Spring的应用推广效果就非常好；Maven构建了一个插件生态圈和资产生态圈，所以，通过插件生态圈，就可以让别人提供各种各样的插件，来对Maven进行扩展，这也就是Maven3.0.x才几兆，但是可以做太多太多的事情;而通过pom构建的工程引用关系，也大大降低了软件构建与管理成本。当然，类似的还有JQuery等等，总之，成功构建了生态圈的，最终发展都比较好，而期望提供完整、强大框架的，他们中的许多已经消失了。<br></br>这就是生态圈的作用。</p><span id="OSC_h1_2"></span><h1>Tiny生态圈</h1><p>Tiny框架的构建者，也深知这个道理，依靠Tiny框架做所有的事情，第一是从时间精力上不可能的；第二是没有足够的能力与水平做所有的事情； 第三，普适性与专业性方面也不能做到良好的平衡；第四，技术的发展变化是那么快，不能快速适应变化，就只能被淘汰。<br></br>因此，Tiny从框架设计初始，就没有想着做一个多么完善、全面的平台，更多的是从体系化方面考虑，构建一个Tiny生态圈，由所有喜欢Tiny，支持Tiny的程序员来来共同加入Tiny生态圈，最终做到越用越强，越用越好用的效果。</p><span id="OSC_h1_3"></span><h1>Tiny生态圈的组成</h1><p>Tiny由若干核心接口组成，这些接口，有的有实现，有的没有实现(需要后续进行扩展)</p><table style="margin:0px 0px 20px 10px;padding:0px;border:0px;font-size:13px;background-color:#FFFFFF;width:765px;color:#555555;font-family:sans-serif;"><tbody><tr><th style="border:0px;vertical-align:middle;background-color:#E5E5E5;">英文名</th><th style="border:0px;vertical-align:middle;background-color:#E5E5E5;">中文名</th><th style="border:0px;vertical-align:middle;background-color:#E5E5E5;">说明</th></tr></tbody><tbody><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">ApplicationProcessor</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">应用处理器</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行应用启动扩展。</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">Plugin</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">插件</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行插件扩展</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">FileProcessor</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">文件处理器</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行文件处理</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">UIComponent</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">界面组件包</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行界面组件扩展</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">EventProcessor</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">事件处理器</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行事件处理</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">BusinessUnit</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">业务单元</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行业务单元扩展</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">FlowComponent</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">流程组件包</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于进行流程组件扩展</td></tr><tr><td style="font-size:13px;vertical-align:middle;background-color:transparent;">FunctionComponent</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">函数组件包</td><td style="font-size:13px;vertical-align:middle;background-color:transparent;">用于对函数体系进行扩展</td></tr></tbody></table><p>通过这些扩展点，可以方便的对Tiny框架进行扩充，更可以方便的复用别人提供的扩展模块。</p><span id="OSC_h1_4"></span><h1>Tiny生态圈的实现</h1><p>Tiny各种扩展只要利用Tiny模板工程创建自己的工程，然后进行简单的实现即可，使用时只要在自己的工程中通过Maven引用或Jar包引用即可。<br></br><strong>强烈推荐采用Maven作为依赖及工程组织管理。</strong></p><p>通过构建公司级Tiny生态圈，可以方便的在公司组进行全面的复用与资产积累，当然也可以复用整个互联网上Tiny生态圈中的资源，只不过是在Pom文件中增加一个Maven依赖即可。</p><span id="OSC_h1_5"></span><h1>Tiny生态圈的组成</h1><p>Tiny生态圈由生产者和消费者两部分组成，生产者生产Tiny组件或模块，消费者则使用这些组件或模块。生产者可以提供开源或非开源的组件，而消费者免费使用开源软件付费使用商业组件，并通过提供反馈促进组件完善来反过来支持生产者。最终达成一个互利互惠的良性循环。</p></div>]]#