#pageTitle("topic" "topic")
#title("Tiny框架" "在Linux下搭建Tiny开发环境 ")
#[[<div class="BlogContent"><p>有一朋友在Linux下编译Tiny时出错了，偶在Windows下编译是OK的，但是说明不了问题。因此就想着搭建一个Linux下的编译环境进行验证，实际搭建过程碰到了一些问题--主要是NTLM ISA代理服务器的问题。由于整个过程比较复杂，因此就写此文志之，有需要的朋友也正好用一下。</p><h1>Step 1：搭建Linux环境</h1><p>考虑到fedora各方面不错，本人选用了fedora，在vSphere中创建一个虚拟机，一会<span style="line-height:1.5;font-size:12.5px;">就装完了，没有啥好说的。</span></p><h1>Step 2：由于经常要从windows通过ssh连接或上传文件，因此设置自动启用ssh</h1><p><span style="font-family:arial, helvetica, clean, sans-serif;font-size:small;line-height:20px;background-color:#FFFFFF;">systemctl enable sshd.service</span></p><h1>Step3 : 安装JDK，并配置环境变量</h1><p>Tiny框架需要jdk1.5及jdk1.6两个jdk，考虑到如果安装高版本的Web Server，因此也安装了jdk1.7</p><p>JDK有bin和rpm两种格式</p><p>bin格式的通过chmod +x xxxx.bin增加执行权限，然后./xxxx.bin来执行安装</p><p>rpm格式的，需要通过rpm命令进行安装，简单的就是rpm -i xxxx.rpm</p><p>环境变量的设置，如果是所有用户起作用，就配置在/etc/profile中，如果是只有当前用户起作用，就是.bash_profile，如果是自己玩玩的，可以放在/etc/profile中，如果是正式的环境，保守一点放在.bash_profile中更适合一点</p><pre class="brush:shell; toolbar: true; auto-links: false;">JAVA_HOME=/opt/jdk1.6.0_33
JDK_HOME=$JAVA_HOME
JRE_HOME=$JAVA_HOME/jre
CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib
export JAVA_HOME JDK_HOME JRE_HOME CLASSPATH
PATH=$PATH:/opt/apache-maven-3.1.0/bin:$JAVA_HOME/bin:$JAVA_HOME/jre/bin</pre><p><span style="font-size:12.5px;line-height:1.5;">修改完profile之后，要使之生效，一个是重启计算机，或者简单一点就是：</span></p><p><span style="font-size:12.5px;line-height:1.5;">source /etc/profile或source .bash_profile</span></p><h1>Step4 :安装Maven<br></br></h1><p><span style="font-size:12.5px;line-height:1.5;">这个很简单，下载apache-maven-3.1.0-bin.zip文件，然后</span></p><p>unzip&amp;nbsp;apache-maven-3.1.0-bin.zip</p><p>就可以解出来。然后把它的bin文件加入到PATH环境变量中。</p><p>由于Tiny框架需要JDK 1.5和JDK1.6，因此在其settings.xml中修改本地仓库位置和设置两个版本jdk javac的常量。</p><p>本地仓库，本人是这么配置的：</p><p><br></br></p><pre class="brush:xml; toolbar: true; auto-links: false;">&lt;localRepository&gt;/opt/MavenRepository&lt;/localRepository&gt;</pre><p><span style="font-size:12.5px;line-height:1.5;">当然，需要把/opt/MavenRepository文件给所有人读写权限</span></p><p><span style="font-size:12.5px;line-height:1.5;">增加两个profile，当然其实一个profile也是可以的，主要目的就是设置两个属性：</span></p><pre class="brush:xml; toolbar: true; auto-links: false;">&lt;profile&gt;<span></span>&lt;id&gt;JAVA5&lt;/id&gt;
            &lt;properties&gt;
                &lt;JAVA_1_5_JAVAC&gt;/opt/jdk1.5.0_22/bin/javac&lt;/JAVA_1_5_JAVAC&gt;
            &lt;/properties&gt;
        &lt;/profile&gt;
        &lt;profile&gt;
            &lt;id&gt;JAVA6&lt;/id&gt;
            &lt;properties&gt;
                &lt;JAVA_1_6_JAVAC&gt;/opt/jdk1.6.0_33/bin/javac&lt;/JAVA_1_6_JAVAC&gt;
            &lt;/properties&gt;
        &lt;/profile&gt;</pre><p>当然，最后还得启用它们：</p><pre class="brush:xml; toolbar: true; auto-links: false;">&lt;activeProfiles&gt;
        &lt;activeProfile&gt;JAVA5&lt;/activeProfile&gt;
        &lt;activeProfile&gt;JAVA6&lt;/activeProfile&gt;
         ...
    &lt;/activeProfiles&gt;</pre><p><span style="font-size:12.5px;line-height:1.5;">OK,这个时候，在命令行输入下面的命令试试，是否有正确的输出：</span></p><pre class="brush:shell; toolbar: true; auto-links: false;">mvn -version</pre><p><span style="font-size:12.5px;line-height:1.5;">正确的话，应该是类似下面的输出：</span></p><pre class="brush:shell; toolbar: true; auto-links: false;">[luog@localhost conf]$ mvn -version
Apache Maven 3.1.0 (893ca28a1da9d5f51ac03827af98bb730128f9f2; 2013-06-28 10:15:32+0800)
Maven home: /opt/apache-maven-3.1.0
Java version: 1.6.0_33, vendor: Sun Microsystems Inc.
Java home: /opt/jdk1.6.0_33/jre
Default locale: zh_CN, platform encoding: UTF-8
OS name: &quot;linux&quot;, version: &quot;3.11.10-301.fc20.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</pre><p><span style="font-size:12.5px;line-height:1.5;">OK，这个时候证明Java和Maven都已经正常安装了。</span></p><p>有的时候，在/usr/bin目录中，会有java,javac等命令被链接到系统默认的jre7的上面，偶地做法是</p><p>sudo rm /usr/bin/java*</p><p>这样以后换不同的JDK只要修改JAVA_HOME常量即可。</p><h1>Step5：<span>ntlmaps安装</span></h1><p>由于本人的机器是在ISA后面的（可以直接上网的或者是是在ISA后面的可以直接跳过），因此上网非常不方便，偶选用的方案是安装ntlmaps-0.9.9，这个安装很简单，就是个tar.gz文件，下载后:</p><p>tar -zxvf ntlmaps-0.9.9.tar.gz就可以了。</p><p>但是这个东东是是Python写的，没有办法，得再安装个Python运行环境，本人用的是ActivePython，下载并安装之即可。</p><p>ntlmaps的配置，也比较简单的，偶查阅资料，发现<a href="http://blog.csdn.net/five3/article/details/7744516" target="_blank" rel="nofollow">http://blog.csdn.net/five3/article/details/7744516</a>是写得最好的。照着做基本上就OK的，前面偶看到一些人写的，不够详细，下面的配置处，采用了默认的方式，结果死活不行，换成下面的才OK：</p><pre class="brush:shell; toolbar: true; auto-links: false;">LM_PART:1  
NT_PART:1  
NTLM_FLAGS: 07820000</pre><p><span style="font-size:12.5px;line-height:1.5;">接下来是设置代理：</span></p><p>在网络设置上增加代理设置：</p><p>localhost:5865</p><p>在/etc/profile中增加下面的内容：</p><pre class="brush:shell; toolbar: true; auto-links: false;">export http_proxy=http://username:password@127.0.0.1:5865
export https_proxy=https://username:password@127.0.0.1:5865</pre><p><span style="line-height:1.5;font-size:12.5px;">username、password这两个换成你自己的哦。</span></p>然后source /etc/profile使之生效，正常的话，用firefox试试就可以启动了。<p>这个时候yum应该是还不能使用的，因为yum的代理也配置过的</p><pre class="brush:shell; toolbar: true; auto-links: false;">sudo vi /etc/yum.conf</pre><p><span style="font-size:12.5px;line-height:1.5;">然后增加或修改proxy的内容：</span></p><pre class="brush:shell; toolbar: true; auto-links: false;">proxy=http://username:password@localhost:5865</pre><p><span style="font-size:12.5px;line-height:1.5;">OK，这个时候，yum应该是已经可以使用了。</span></p><h1>Step6 :安装svn</h1><p>输入下面的命令安装svn</p><p>sudo yum -y install subversion</p><p>如果正常的话，一会就安装成功了。</p><p>接下来设置subversion的代理：</p><p>设置文件的位置：$HOME/.subversion/servers<br></br><br></br>具体需要关注的片段如下：<br></br>[global] &amp;nbsp;<br></br># http-proxy-exceptions = *.exception.com, www.internal-site.org &amp;nbsp;<br></br>http-proxy-host = localhost&amp;nbsp;<br></br>http-proxy-port = 5865 &amp;nbsp;<br></br>http-proxy-username = username &amp;nbsp;<br></br>http-proxy-password = password &amp;nbsp;<br></br>注意，上面的username和password要改成你自己的</p><h1>Step7 : 下载Tiny源代码了：</h1><p>svn checkout https://svn.code.sf.net/p/tinyorg/code/trunk tinyorg-code</p><h1><span>Step8 : 编译</span></h1><pre class="brush:shell; toolbar: true; auto-links: false;">cd tinyorg-code/Sources/framework
mvn install -DskipTests</pre><p><span style="font-size:12.5px;line-height:1.5;">然后就是漫长的等待，不妨弄杯茶水，听个音乐，休息一下。你的机器和网络够好的话，10分钟差不多咧。</span></p><h1>Step9 : idea或Eclipse的安装</h1><p>idea是个tar.gz包，放出来就好。</p><p>Eclipse可以到软件中，搜索Eclipse选择安装即可，然后给Eclipse装上常用的插件subclipse，m2eclipse等，就可以像在Windows下一样导入工程后开工了。</p><p><br></br></p></div>]]#