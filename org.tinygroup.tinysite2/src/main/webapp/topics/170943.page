#pageTitle("topic","topic")
#title("算法感想","带权树的最短最长问题 ")
#[[<div class="BlogContent"><p>原题如下：</p><p><img src="http://static.oschina.net/uploads/space/2013/1018/143327_Q9l2_1245989.png" alt=""></img><span></span></p><p><span></span></p><pre class="brush:java; toolbar: true; auto-links: false;">上面的示意图展示了一组城镇之问的道路交通网络。道路的不同颜色表示不同的长度。为了降低难度，只用考虑树形结构，也就是任意两点之间只有一个通路。

请给出思路(当然有程序更好)：分别求出整个树中最远的两点之间的距离是多少？最近的两点之间的距离是多少？

此题高效解出者水平肯定不会弱，期待强人出现。</pre><p>解答<span>解说</span>：</p><p>如果说把所有的路径长度都算出来，再比较找出最大或最小值，结果无疑是正确的，但是算法复杂度太大了。当然，网上也有各种各样的解法。</p><p>我的求长最路径的思路是：</p><p>找到所有的叶子节点，每次砍掉短的部分，再合并成一个新的枝。比如：Y形树叉，左上3、右上4、下面5，则砍掉3，合并4、5，变成9，如此，如果是单叶子节点，每次合并，会少一个节点；如果是双叶子节点，会少一个节点，如果n叶子节点，会去掉n-1个节点。</p><p>然后做个递归，直到变成只有一个树枝，就找到答案了。</p><p>当然，合并的时候要注意的问题是：要避免把正确答案提交给去掉，如下图：</p><p><img src="http://static.oschina.net/uploads/space/2013/1024/091510_q1SO_1245989.png" alt=""></img></p><p>上面的两个黑色的线，实际上树中最长的两个距离。如果简单的把叶子节点比较，去掉短的，就会导致把正确的结果提交去掉了。因此，在去掉叶子节点时，要注意保留最长的两个！</p><p>在最佳情况下，星形结构，一次循环就去掉了n-2个点，答案已经求出。</p><p>在最差情兄下，就是一条线结构，每次循环，去掉2个点。O(n/2)</p><p>在满二叉树的情况下，每次去掉一半的点。应该就是O(log(2n))</p><p>所以，综合来说，时间复杂度还是可以不错的。</p><p>如果是要求最短路径 ，判定条件相反就好。</p><p>有不对或不严密的地方，欢迎指正。</p></div>]]#