/**
 *  Copyright (c) 1997-2013, www.tinygroup.org (luo_guo@icloud.com).
 *
 *  Licensed under the GPL, Version 3.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.gnu.org/licenses/gpl.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
#getPackageName(table,project)
${process.setExtendPackageName(table.properties.extendMap.get("package-name"))}
import org.tinygroup.tinysqldsl.base.Column;
import org.tinygroup.tinysqldsl.base.Table;
#set(pojoName = classNameUtils.getClassName(table.getName()))
#set(tableName = pojoName + "Table")
#javadoc(table.title ,table.description)
public class ${tableName} extends Table { #nextline()

	#comment()
	public static final ${tableName} ${stringUtils.upperCase(table.getName())}_TABLE  = new ${tableName}();
 
#for(field in table.getFieldList())
#set(stdfield = standardfieldCache.get(field.getStandardFieldId()))
	#if(stdfield != null)
		#javadoc(stdfield.title,stdfield.description)
		#set(name = stdfield.getName())
		public final Column ${stringUtils.upperCase(name)}  = new Column(this, "${name}");
	#end
#end

public ${tableName}() {
super("${table.getName()}");
}
#set(primaryKey = table.getPrimaryKey())
#if(primaryKey != null)
	#if(primaryKey.isAutoIncrease())
		public boolean isAutoGeneratedKeys() {
			return true;
		}
	#end
#end
}

#macro getPackageName(table ,project)
	#set(packageName=interfacePackage)
	#set(tempPackageName = table.properties.extendMap.get("package-name"))
	#if(tempPackageName?.length() > 0)
		#if(packageName?.length() > 0)
			#set(packageName=packageName + "." +tempPackageName)
		#else
			#set(packageName=tempPackageName)
		#end
	#end
	#set(packageName=packageName?.replace("interface", "inter"))

	#if(packageName != null && packageName?.length() > 0)
		#set(pojoPackage=packageName + "." + "constant;")
		package ${pojoPackage}#nextline()
	#else
		package constant;#nextline()
	#end
#end

#macro nextline()
	#eol
#end

#macro javadoc(title , description)
	/** 
	 * <!-- begin-user-doc -->
	 * ${title}
	 #if(description != null && description?.length() > 0)
		 #for(line in stringUtils.split(description))
 	 * ${line}#eol
		 #end
	 #end
 	 * <!-- end-user-doc -->
 	 */#eol
#end

#macro comment()
/** 
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 */
#end